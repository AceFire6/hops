name: Create hops release

on:
  push:
    tags:
      - "*"

jobs:
  build-console:
    name: Build console UI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 19

      - name: Install dependencies
        working-directory: console
        run: |
          # install pnpm
          npm install -g pnpm
          # install dependencies
          pnpm install

      - name: Build project
        working-directory: console
        run: pnpm run build

      - name: Cache the build
        uses: actions/cache/save@v3
        with:
          path: assets/console
          key: ${{ github.sha }}-console

  build-release:
    name: Build And Release Binaries
    needs: build-console
    strategy:
      matrix:
        # build and publish in parallel: linux/amd64, linux/arm64, windows/amd64, windows/arm64
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        include:
          - runs-on: ubuntu-latest
            goos: linux
          - runs-on: ubuntu-latest
            goos: windows
          - runs-on: macos-latest
            goos: darwin
    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Check if should MacOS code sign
        env:
          HAS_NOTARIZATION_SECRET: ${{ secrets.APPLE_CODE_SIGNING_DEVELOPER_ID != '' }}
        run: |
          if [[ "${HAS_NOTARIZATION_SECRET}" == "true" && "${{ github.ref }}" == refs/tags/* && ${{ matrix.goos }} == 'darwin' ]]; then
            echo "NOTARIZE=true" >> $GITHUB_ENV
          fi

      - name: Checkout
        uses: actions/checkout@v3

      - name: Retrieve cached console build
        uses: actions/cache/restore@v3
        with:
          path: assets/console
          key: ${{ github.sha }}-console

      - name: Build
        run: |
          # binary suffix
          export EXT=''
          if [ ${{ matrix.goos }} == 'windows' ]; then
            export EXT='.exe'
          fi
          echo "EXT=$EXT" >> "$GITHUB_ENV"

          CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o bin/hops${EXT}

      - name: Set up signing
        if: env.NOTARIZE == 'true'
        env:
          APPLE_CODE_SIGNING_CERTIFICATE_P12_BASE64: ${{ secrets.APPLE_CODE_SIGNING_CERTIFICATE_P12_BASE64 }}
          APPLE_CODE_SIGNING_CERTIFICATE_P12_PASSWORD: ${{ secrets.APPLE_CODE_SIGNING_CERTIFICATE_P12_PASSWORD }}
        run: |
          .github/scripts/codesign_setup.sh

      - name: Sign MacOS executable
        if: env.NOTARIZE == 'true'
        env:
          APPLE_CODE_SIGNING_DEVELOPER_ID: ${{ secrets.APPLE_CODE_SIGNING_DEVELOPER_ID }}
        run: |
          .github/scripts/codesign.sh bin/hops${EXT}

      - name: Prepare for release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # package hops file in a zip names hops-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          mkdir -p zip
          cd bin
          zip ../zip/hops-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip hops${EXT}
          cd ..

      - name: Sign MacOS zip
        if: env.NOTARIZE == 'true'
        env:
          APPLE_CODE_SIGNING_DEVELOPER_ID: ${{ secrets.APPLE_CODE_SIGNING_DEVELOPER_ID }}
        run: |
          .github/scripts/codesign.sh zip/hops-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip

      - name: Notarize
        if: env.NOTARIZE == 'true'
        env:
          APPLE_LOGIN: ${{ secrets.APPLE_LOGIN }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          APPLE_NOTARYTOOL_PASSWORD: ${{ secrets.APPLE_NOTARYTOOL_PASSWORD }}
        run: |
          .github/scripts/notarize.sh zip/hops-${{ github.ref_name }}-${{ matrix.goos }}-${{ matrix.goarch }}.zip --apple-id ${{ secrets.APPLE_LOGIN }} --team-id ${{ secrets.APPLE_TEAM_ID }} --password ${{ secrets.APPLE_NOTARYTOOL_PASSWORD }}

      - name: Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            zip/*.zip
